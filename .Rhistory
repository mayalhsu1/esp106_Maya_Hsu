ggplot(spending_2016, aes(x = spending))+
geom_histogram(bins = 20)
labs(x = "Spending (in dollars)", y = "Species", title = "Distribution of Spending on Different Species in 2016")
options(scipen = 999)
spending_2016 <- subset(spending, Year == 2016)
ggplot(spending_2016, aes(x = spending))+
geom_density()
labs(x = "Spending (in dollars)", y = "Species", title = "Distribution of Spending on Different Species in 2016")
count <- table(conservation$taxon)
count
table <- data.frame(count)
table
table$percentage <- table$Freq/nrow(conservation)
colnames(table) <- c("Taxanomic Group","Number of Species","Percentage")
count <- table(conservation$taxon)
count
table <- data.frame(count)
table
table$percentage <- table$Freq/nrow(conservation)
colnames(table) <- c("Taxanomic Group","Number of Species","Percentage")
table
library(tidyverse)
ggplot(conservation, aes(x = taxon, fill = conservation_status))+
geom_bar(stat="count")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
labs(x = "Taxonomic Group", y = "Number of Species", title = "Conservation Status by Taxonomic Group")+
scale_fill_discrete(name = "Conservation Status", labels = c("Critically Imperiled", "Imperiled", "Vulnerable", "Apparently Secured", "Secure", "Extinct", "Probably Extinct", "Unknown", "NA"))
options(scipen = 999) #getting rid of scientific notation
spending_2016 <- subset(spending, Year == 2016) #creating new df with 2016 data
ggplot(spending_2016, aes(x = spending))+
geom_density()
labs(x = "Spending (in dollars)", y = "Species", title = "Distribution of Spending on Different Species in 2016")
#using geom_density()
ggplot(spending_2016, aes(x = spending))+
geom_histotram()
options(scipen = 999) #getting rid of scientific notation
spending_2016 <- subset(spending, Year == 2016) #creating new df with 2016 data
ggplot(spending_2016, aes(x = spending))+
geom_density()
labs(x = "Spending (in dollars)", y = "Species", title = "Distribution of Spending on Different Species in 2016")
#using geom_density()
ggplot(spending_2016, aes(x = spending))+
geom_histogram()
labs(x = "Spending (in dollars)", y = "Species", title = "Distribution of Spending on Different Species in 2016")
#using geom_histogram()
options(scipen = 999) #getting rid of scientific notation
spending_2016 <- subset(spending, Year == 2016) #creating new df with 2016 data
ggplot(spending_2016, aes(x = spending))+
geom_density()+
labs(x = "Spending (in dollars)", y = "Species", title = "Distribution of Spending on Different Species in 2016")
#using geom_density()
ggplot(spending_2016, aes(x = spending))+
geom_histogram()
labs(x = "Spending (in dollars)", y = "Species", title = "Distribution of Spending on Different Species in 2016")
#using geom_histogram()
options(scipen = 999) #getting rid of scientific notation
spending_2016 <- subset(spending, Year == 2016) #creating new df with 2016 data
ggplot(spending_2016, aes(x = spending))+
geom_density()+
labs(x = "Spending (in dollars)", y = "Species", title = "Distribution of Spending on Different Species in 2016")
#using geom_density()
ggplot(spending_2016, aes(x = spending))+
geom_histogram()+
labs(x = "Spending (in dollars)", y = "Species", title = "Distribution of Spending on Different Species in 2016")
#using geom_histogram()
options(scipen = 999)
ggplot(species1, aes(x = log_spending))+
geom_histogram()+
labs(x = "Spending (in dollars)", y = "Frequency", title = "Distribution of Spending on Different Species")
#data from all years
options(scipen = 999)
spending1_2016 <- subset(species1, Year == 2016)
ggplot(spending1_2016, aes(x = log_spending))+
geom_histogram()+
labs(x = "Spending (in dollars)", y = "Frequency", title = "Distribution of Spending on Different Species in 2016")
#2016 data
ggplot(spending1_2016, aes(x = log_spending))+
geom_density()+
labs(x = "Spending (in dollars)", y = "Frequency", title = "Distribution of Spending on Different Species in 2016")
ggplot(spending1_2016, aes(x = log_spending))+
geom_histogram()+
labs(x = "Spending (in dollars)", y = "Frequency", title = "Distribution of Spending on Different Species in 2016")
library(knitr)
tab <- cbind(Name=c("speciesid", "speciesname", "taxon", "conservation status", "listed"), Description = c("unique ID", "scientific name", "Species group", "Conservation status in North America, according to   [NatureServe](https://www.natureserve.org/conservation-tools/conservation-rank-calculator): 1 = Critically Imperiled; 2 = Imperiled; 3 = Vulnerable; 4 = Apparently Secure; 5 = Secure; UNK = Unknown; Prob. Extinct = Probably Extinct; Extinct", "Is the species listed as threatened or endangered under the US Endangered Species Act: 0 = No; 1 = Yes"))
knitr::kable(tab, caption ='Table 1. Variables in "consevationdata.csv"' )
knitr::opts_knit$set(root.dir = '/tmp')
setwd("/Users/mayahsu/Desktop/school/environmental data science/midterm")
conservation <- read.csv("conservationdata.csv")
spending <- read.csv("spendingdata.csv")
library(knitr)
tab <- cbind(Name=c("speciesid", "speciesname", "taxon", "conservation status", "listed"), Description = c("unique ID", "scientific name", "Species group", "Conservation status in North America, according to   [NatureServe](https://www.natureserve.org/conservation-tools/conservation-rank-calculator): 1 = Critically Imperiled; 2 = Imperiled; 3 = Vulnerable; 4 = Apparently Secure; 5 = Secure; UNK = Unknown; Prob. Extinct = Probably Extinct; Extinct", "Is the species listed as threatened or endangered under the US Endangered Species Act: 0 = No; 1 = Yes"))
knitr::kable(tab, caption ='Table 1. Variables in "consevationdata.csv"' )
knitr::opts_knit$set(root.dir = '/tmp')
setwd("/Users/mayahsu/Desktop/school/environmental data science/midterm")
conservation <- read.csv("conservationdata.csv")
spending <- read.csv("spendingdata.csv")
listed <- subset(conservation, listed == 1) #creating new df with species that are listed
nrow(listed)
nrow(listed)/nrow(conservation) #percentage of listed species
count <- table(conservation$taxon) #frequency table for taxon variable
count
table <- data.frame(count) #turning table into df
table
table$percentage <- table$Freq/nrow(conservation) #adding relative frequency column to df
colnames(table) <- c("Taxanomic Group","Number of Species","Percentage") #renaming columns
table
library(tidyverse)
ggplot(conservation, aes(x = taxon, fill = conservation_status))+
geom_bar(stat="count")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
labs(x = "Taxonomic Group", y = "Number of Species", title = "Conservation Status by Taxonomic Group")+
scale_fill_discrete(name = "Conservation Status", labels = c("Critically Imperiled", "Imperiled", "Vulnerable", "Apparently Secured", "Secure", "Extinct", "Probably Extinct", "Unknown", "NA"))
options(scipen = 999) #getting rid of scientific notation
spending_2016 <- subset(spending, Year == 2016) #creating new df with 2016 data
ggplot(spending_2016, aes(x = spending))+
geom_density()+
labs(x = "Spending (in dollars)", y = "Species", title = "Distribution of Spending on Different Species in 2016")
#using geom_density()
ggplot(spending_2016, aes(x = spending))+
geom_histogram()+
labs(x = "Spending (in dollars)", y = "Species", title = "Distribution of Spending on Different Species in 2016")
#using geom_histogram()
spending_2016 <- spending_2016[order(spending_2016$spending, decreasing = TRUE),] #reordering the data so that the species are listed in descending order of spending
most <- spending_2016[1:3,] #indexing for the first 3 species, which have the highest spending
most
species <- merge(conservation, spending, by = "speciesid") #merging conservation and spending dfs
names <- subset(species, speciesid == c(1632, 4486,1684)) #creating a new df with only the species ids that had the most spending in 2016
unique(names$speciesname) #getting the unique species names for the new df
species1 <- subset(species, spending != 0) #creating a new df without species with no spending
species1$log_spending <- log(species1$spending) #adding a new column with log of spending
options(scipen = 999)
ggplot(species1, aes(x = log_spending))+
geom_histogram()+
labs(x = "Spending (in dollars)", y = "Frequency", title = "Distribution of Spending on Different Species")
#data from all years
options(scipen = 999)
spending1_2016 <- subset(species1, Year == 2016)
ggplot(spending1_2016, aes(x = log_spending))+
geom_histogram()+
labs(x = "Spending (in dollars)", y = "Frequency", title = "Distribution of Spending on Different Species in 2016")
#2016 data
model <- lm(log_spending ~ taxon, data = species1) #creating a linear model with taxonomic group as the dependent variable and logged spending as the dependent variable
summary(model) #generating summary of regression
library(knitr)
knitr::opts_knit$set(root.dir = '/tmp')
setwd("/Users/mayahsu/Desktop/school/environmental data science/midterm")
conservation <- read.csv("conservationdata.csv")
spending <- read.csv("spendingdata.csv")
knitr::opts_chunk$set(echo = TRUE)
path <- "/Users/mayahsu/Desktop/school/environmental data science/"
knitr::opts_knit$set(root.dir = path)
setwd(path)
housing <- read.csv("ACSCP1Y2021.CP04-2023-03-06T213420.csv")
knitr::opts_chunk$set(echo = TRUE)
path <- "/Users/mayahsu/Desktop/school/environmental data science/"
knitr::opts_knit$set(root.dir = path)
setwd(path)
housing <- read.csv("final/ACSCP1Y2021.CP04-2023-03-06T224453.csv")
housing <- t(housing) #transposing the data
headers <- housing[1, ] #after transposing, our desired column headers were in row 1; extracted values from row 1 as a vector
colnames(housing) <- headers #renamed columns using vector headers with header names
housing <- housing[-1, ] #removed first row
housing <- housing[-110, ] #removed row with blank data
Years <- c("2021", "2019", "2018", "2017") #creating list of dates
Years <- rep(Years, 41) #repeating dates
as.data.frame(Years) #data frame
housing <- cbind(housing, Years) #adding dates to housing data
County <- rownames(housing)
County <- substr(County, 1, nchar(County)-34)
as.data.frame(County)
County <- gsub(".", " ", County, fixed = TRUE)
rownames(housing) <- 1:nrow(housing)
housing <- gsub("N", NA, housing)
housing <- gsub("(X)", NA, housing)
housing <- cbind(housing, County)
housing_type <- housing[ ,c(9:17)]
housing_type <- gsub("%", "", housing_type, fixed = TRUE)
housing_type <- as.data.frame(housing_type)
housing_type <- sapply(housing_type, as.numeric)
housing_type <- housing_type/100
housing_type <- as.data.frame(housing_type)
housing_type <- cbind(housing_type, housing[ ,161:162])
housing_type_2021 <- subset(housing_type, Years == "2021")
housing_type_bay <- subset(housing_type_2021, County %in% c("San Francisco", "Santa Clara", "Marin", "Alameda", "Solano", "Contra Costa", "Napa", "Sonoma", "San Mateo"))
names_bay <- housing_type_bay[, 11]
housing_type_bay <- subset(housing_type_bay, select = -c(10, 11))
color <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6')
housing_type_bay <- as.matrix(housing_type_bay)
housing_type_bay <- t(housing_type_bay)
par(mar=c(5.1,6,6,6)+.1, xpd = TRUE)
barplot(housing_type_bay, horiz = TRUE, names.arg = names_bay, cex.names = 0.7, las = 1, col = color, main = "Housing Type by County in the Bay Area", xlab = "Proportion")
legend("right", inset = -0.25, legend = rownames(housing_type_bay), fill = color, cex = 0.5, title = "Housing Type")
knitr::opts_chunk$set(echo = TRUE)
path <- "/Users/mayahsu/Desktop/school/environmental data science/"
knitr::opts_knit$set(root.dir = path)
setwd(path)
housing <- read.csv("final/ACSCP1Y2021.CP04-2023-03-06T224453.csv")
housing <- t(housing) #transposing the data
headers <- housing[1, ] #after transposing, our desired column headers were in row 1; extracted values from row 1 as a vector
colnames(housing) <- headers #renamed columns using vector headers with header names
housing <- housing[-1, ] #removed first row
housing <- housing[-110, ] #removed row with blank data
Years <- c("2021", "2019", "2018", "2017") #creating list of dates
Years <- rep(Years, 41) #repeating dates
as.data.frame(Years) #data frame
housing <- cbind(housing, Years) #adding dates to housing data
County <- rownames(housing)
County <- substr(County, 1, nchar(County)-34)
as.data.frame(County)
County <- gsub(".", " ", County, fixed = TRUE)
rownames(housing) <- 1:nrow(housing)
housing <- gsub("N", NA, housing)
housing <- gsub("(X)", NA, housing)
housing <- cbind(housing, County)
housing_type <- housing[ ,c(9:17)]
housing_type <- gsub("%", "", housing_type, fixed = TRUE)
housing_type <- as.data.frame(housing_type)
housing_type <- sapply(housing_type, as.numeric)
housing_type <- housing_type/100
housing_type <- as.data.frame(housing_type)
housing_type <- cbind(housing_type, housing[ ,161:162])
housing_type_2021 <- subset(housing_type, Years == "2021")
housing_type_bay <- subset(housing_type_2021, County %in% c("San Francisco", "Santa Clara", "Marin", "Alameda", "Solano", "Contra Costa", "Napa", "Sonoma", "San Mateo"))
names_bay <- housing_type_bay[, 11]
housing_type_bay <- subset(housing_type_bay, select = -c(10, 11))
color <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6')
housing_type_bay <- as.matrix(housing_type_bay)
housing_type_bay <- t(housing_type_bay)
par(mar=c(5.1,6,6,6)+.1, xpd = TRUE)
barplot(housing_type_bay, horiz = TRUE, names.arg = names_bay, cex.names = 0.7, las = 1, col = color, main = "Housing Type by County in the Bay Area", xlab = "Proportion")
legend("right", inset = -0.25, legend = rownames(housing_type_bay), fill = color, cex = 0.5, title = "Housing Type")
housing_type_metros <- subset(housing_type, Years == "2021")
housing_type_bay <- subset(housing_type_2021, County %in% c("San Francisco", "Los Angeles", "San Diego", "Sacramento", "San Jose"))
names_metros <- housing_type_metros[, 11]
housing_type_metros <- subset(housing_type_metros, select = -c(10, 11))
color <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6')
housing_type_metros <- as.matrix(housing_type_metros)
housing_type_metros <- t(housing_type_metros)
par(mar=c(5.1,6,6,6)+.1, xpd = TRUE)
barplot(housing_type_metros, horiz = TRUE, names.arg = names_bay, cex.names = 0.7, las = 1, col = color, main = "Housing Type by County", xlab = "Proportion")
housing_type_metros <- subset(housing_type, Years == "2021")
housing_type_bay <- subset(housing_type_2021, County %in% c("San Francisco", "Los Angeles", "San Diego", "Sacramento", "San Jose"))
names_metros <- housing_type_metros[, 11]
housing_type_metros <- subset(housing_type_metros, select = -c(10, 11))
color <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6')
housing_type_metros <- as.matrix(housing_type_metros)
housing_type_metros <- t(housing_type_metros)
par(mar=c(5.1,6,6,6)+.1, xpd = TRUE)
barplot(housing_type_metros, horiz = TRUE, names.arg = names_metros, cex.names = 0.7, las = 1, col = color, main = "Housing Type by County", xlab = "Proportion")
legend("right", inset = -0.25, legend = rownames(housing_type_metros), fill = color, cex = 0.5, title = "Housing Type")
housing_type_2021 <- subset(housing_type, Years == "2021")
housing_type_metros <- subset(housing_type_2021, County %in% c("San Francisco", "Los Angeles", "San Diego", "Sacramento", "San Jose"))
names_metros <- housing_type_metros[, 11]
housing_type_metros <- subset(housing_type_metros, select = -c(10, 11))
color <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6')
housing_type_metros <- as.matrix(housing_type_metros)
housing_type_metros <- t(housing_type_metros)
par(mar=c(5.1,6,6,6)+.1, xpd = TRUE)
barplot(housing_type_metros, horiz = TRUE, names.arg = names_metros, cex.names = 0.7, las = 1, col = color, main = "Housing Type by County", xlab = "Proportion")
legend("right", inset = -0.25, legend = rownames(housing_type_metros), fill = color, cex = 0.5, title = "Housing Type")
housing_type_2019 <- subset(housing_type, Years == "2019")
View(housing_type)
View(housing_type_2019)
demographic <- read.csv("final/county data.csv")
View(demographic)
demo_2019 <- merge(demographic, housing_type_2019, by = "County")
View(demo_2019)
View(demo_2019)
View(housing_type)
View(housing)
View(demographic)
projected <- read.csv("https://data.ca.gov/dataset/81b0841f-2802-403e-b48e-2ef4b751f77c/resource/fe505d9b-8c36-42ba-ba30-08bc4f34e022/download/table-a2-annual-building-activity-report-summary-new-construction-entitled-permits-and-completed.csv")
projected <- read.csv("https://data.ca.gov/dataset/81b0841f-2802-403e-b48e-2ef4b751f77c/resource/fe505d9b-8c36-42ba-ba30-08bc4f34e022/download/table-a2-annual-building-activity-report-summary-new-construction-entitled-permits-and-completed.csv")
View(projected)
View(projected)
```
sapply(projected, class)
i <- (projected$CNTY_NAME == "RIVERSIDE")&(projected$VLOW_INCOME_DR == 1)
i
table(i)
sum(i)
i <- (projected$CNTY_NAME == "SAN FRANCISCO")&(projected$LOW_INCOME_DR == 1)
table(i)
i <- (projected$CNTY_NAME == "SAN FRANCISCO")&(projected$LOW_INCOME_DR == 1)
i
table(i)
i <- (projected$CNTY_NAME == "SAN FRANCISCO")
table(i)
unique(projected$CNTY_NAME)
View(demographic)
unique(projected$UNIT_CAT_DESC)
unique(projected$TENURE_DESC)
i <- (projected$TENURE_DESC == "Renter")
table(i)
i <- (projected$TENURE_DESC == "Owner")
table(i)
i <- (projected$TENURE_DESC == "Owner")&(projected$UNIT_CAT_DESC != "Single-Family Detached Unit")
table(i)
View(housing)
View(housing)
View(housing)
housing <- read.csv("https://raw.githubusercontent.com/mayalhsu1/esp106_Maya_Hsu/main/ACSCP1Y2021.CP04-2023-03-15T072503.csv?token=GHSAT0AAAAAAB527DIGVPFOIVHRXKVSRCCGZAROPEA")
View(housing)
housing <- t(housing) #transposing the data
projected <- read.csv("https://raw.githubusercontent.com/mayalhsu1/esp106_Maya_Hsu/main/table-a2-annual-building-activity-report-summary-new-construction-entitled-permits-and-completed%20(3).csv?token=GHSAT0AAAAAAB527DIGFDF2YPLLQJ4K5ZYEZAROS6Q")
demographic <- read.csv("https://raw.githubusercontent.com/mayalhsu1/esp106_Maya_Hsu/main/county%20data.csv?token=GHSAT0AAAAAAB527DIHEHPA7VV27EBUGDYOZAROU3Q")
View(housing)
projected$CNTY_NAME <- str_to_title(projected$CNTY_NAME)
library(tidyverse)
projected$CNTY_NAME <- str_to_title(projected$CNTY_NAME)
#projects that where approved with SB35
i = projected$APPROVE_SB35 == "Y"
SB35 <- projected[i,]
#projects that have occupets
i = SB35$CO_ISSUE_DT1 != ""
OC_sb35 <- SB35[i,]
counties <- unique(SB35$CNTY_NAME)
counties <- sort(counties)
housing <- t(housing) #transposing the data
headers <- housing[1, ] #extracted values from row 1 as a vector
colnames(housing) <- headers #renamed columns with row 1 values
housing <- housing[-1, ] #removed first row
housing <- housing[-110, ] #removed row with blank data
housing <- read.csv("https://raw.githubusercontent.com/mayalhsu1/esp106_Maya_Hsu/main/ACSCP1Y2021.CP04-2023-03-15T072503.csv?token=GHSAT0AAAAAAB527DIGVPFOIVHRXKVSRCCGZAROPEA")
knitr::opts_chunk$set(echo = TRUE)
path <- "/Users/mayahsu/Desktop/school/environmental data science/"
knitr::opts_knit$set(root.dir = path)
setwd(path)
housing <- read.csv("https://raw.githubusercontent.com/mayalhsu1/esp106_Maya_Hsu/main/ACSCP1Y2021.CP04-2023-03-15T072503.csv?token=GHSAT0AAAAAAB527DIGVPFOIVHRXKVSRCCGZAROPEA")
demographic <- read.csv("https://raw.githubusercontent.com/mayalhsu1/esp106_Maya_Hsu/main/county%20data.csv?token=GHSAT0AAAAAAB527DIHEHPA7VV27EBUGDYOZAROU3Q")
projected <- read.csv("https://raw.githubusercontent.com/mayalhsu1/esp106_Maya_Hsu/main/table-a2-annual-building-activity-report-summary-new-construction-entitled-permits-and-completed%20(3).csv?token=GHSAT0AAAAAAB527DIGFDF2YPLLQJ4K5ZYEZAROS6Q")
housing <- read.csv("https://raw.githubusercontent.com/mayalhsu1/esp106_Maya_Hsu/main/ACSCP1Y2021.CP04-2023-03-15T072503.csv?token=GHSAT0AAAAAAB527DIHXEQQGLZSSAPQWQTOZAROYAQ")
projected$CNTY_NAME <- str_to_title(projected$CNTY_NAME)
library(tidyverse)
projected$CNTY_NAME <- str_to_title(projected$CNTY_NAME)
#projects that where approved with SB35
i = projected$APPROVE_SB35 == "Y"
SB35 <- projected[i,]
#projects that have occupets
i = SB35$CO_ISSUE_DT1 != ""
OC_sb35 <- SB35[i,]
counties <- unique(SB35$CNTY_NAME)
counties <- sort(counties)
housing <- t(housing) #transposing the data
headers <- housing[1, ] #extracted values from row 1 as a vector
colnames(housing) <- headers #renamed columns with row 1 values
housing <- housing[-1, ] #removed first row
housing <- housing[-110, ] #removed row with blank data
Years <- c("2021", "2019", "2018", "2017") #creating list of dates
Years <- rep(Years, 41) #repeating dates
as.data.frame(Years) #data frame
housing <- cbind(housing, Years) #adding dates to housing data
County <- rownames(housing)
County <- substr(County, 1, nchar(County)-34)
as.data.frame(County)
County <- gsub(".", " ", County, fixed = TRUE)
rownames(housing) <- 1:nrow(housing)
housing <- gsub("N", NA, housing)
housing <- gsub("(X)", NA, housing)
housing <- cbind(housing, County)
housing_type <- housing[ ,c(9:17)]
housing_type <- gsub("%", "", housing_type, fixed = TRUE)
housing_type <- as.data.frame(housing_type)
housing_type <- sapply(housing_type, as.numeric)
housing_type <- housing_type/100
housing_type <- as.data.frame(housing_type)
housing_type <- cbind(housing_type, housing[ ,161:162])
housing_type <- housing[ ,c(9:17)]
housing_type <- gsub("%", "", housing_type, fixed = TRUE)
housing_type <- as.data.frame(housing_type)
housing_type <- sapply(housing_type, as.numeric)
housing_type <- housing_type/100
housing_type <- as.data.frame(housing_type)
housing_type <- cbind(housing_type, housing[ ,161:162])
View(housing_type)
h2021 <- subset(housing_type, Years == "2021")
bay <- subset(h2021, County %in% c("SAN FRANCISCO", "SANTA CLARA", "MARIN", "ALAMEDA", "SOLANO", "CONTRA COSTA", "NAPA", "SONOMA", "SAN MATEO"))
names_bay <- bay[, 11]
bay <- subset(bay, select = -c(10, 11))
color <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6')
bay <- as.matrix(bay)
bay <- t(bay)
par(mar=c(5.1,6,6,6)+.1, xpd = TRUE)
barplot(bay, horiz = TRUE, names.arg = names_bay, cex.names = 0.7, las = 1, col = color, main = "Housing Type by County in the Bay Area", xlab = "Proportion")
h2021 <- subset(housing_type, Years == "2021")
housing_type_2021 <- subset(housing_type, Years == "2021")
sb35_housing_type <- subset(h2021, County %in% counties)
names_sb35 <- sb35_housing_type[, 11]
sb35_housing_type <- subset(sb35_housing_type, select = -c(10, 11))
color <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6')
sb_type <- colnames(sb35_housing_type)
sb_type <- str_squish(sb_type)
sb35_housing_type <- as.matrix(sb35_housing_type)
sb35_housing_type <- t(sb35_housing_type)
#png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/Current Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mar=c(4,5,5,5)+.1, xpd = TRUE)
barplot(sb35_housing_type, horiz = TRUE, names.arg = names_sb35, cex.names = 0.4, las = 1, col = color, main = "Housing Type in Counties With\nApproved SB35 Projects", xlab = "Proportion", cex.axis = 0.5, width = 1, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32))
legend("right", inset = -0.19, legend = sb_type, fill = color, cex = 0.5, title = "Housing Type")
#dev.off()
approved <- table(SB35$CNTY_NAME)
approved <- as.data.frame(table(SB35$CNTY_NAME))
View(approved)
View(SB35)
View(demographic)
med_income <- as.data.frame(demographics[ ,c(1,29)])
med_income <- as.data.frame(demographic[ ,c(1,29)])
View(med_income)
approved_v_income <- merge(approved, med_income)
View(approved_v_income)
rm(approved_v_income)
colnames(med_income) <- c("County", "Median Income")
approved_v_income <- merge(approved, med_income, by = "County")
colnames(approved) <- c("County", "Count")
approved_v_income <- merge(approved, med_income, by = "County")
View(approved_v_income)
?plot
plot(approved_v_income[ ,2], approved_v_income[ ,3])
med_income <- gsub("$", "", med_income, fixed = TRUE)
as.data.frame(med_income)
med_income <- as.data.frame(demographic[ ,c(1,29)])
str(med_income)
income <- med_income[ ,2]
income <- gsub("$", "", income, fixed = TRUE)
income
income <- as.numeric(gsub("$", "", income, fixed = TRUE))
income <- med_income[ ,2]
income <- (gsub("$", "", income, fixed = TRUE)
income <- gsub("$", "", income, fixed = TRUE)
income
View(med_income)
View(demographic)
View(demographic)
med_income <- med_income[-c(59,60), ]
colnames(med_income) <- c("County", "Median Income")
income <- med_income[ ,2]
income <- gsub("$", "", income, fixed = TRUE)
income <- as.numeric(gsub("$", "", income, fixed = TRUE))
med_income[ ,2] <- income
sapply(med_income, class)
approved_v_income <- merge(approved, med_income, by = "County")
plot(approved_v_income[ ,2], approved_v_income[ ,3])
med_income <- as.data.frame(demographic[ ,c(1,29)])
med_income <- med_income[-c(59,60), ]
colnames(med_income) <- c("County", "Median Income")
income <- med_income[ ,2]
income <- as.numeric(gsub("$", "", income, fixed = TRUE))
med_income <- as.data.frame(demographic[ ,c(1,29)])
med_income <- med_income[-c(59,60), ]
colnames(med_income) <- c("County", "Median Income")
income <- med_income[ ,2]
income
income <- as.numeric(gsub("$", "", income, fixed = TRUE))
med_income <- as.data.frame(demographic[ ,c(1,29)])
med_income <- med_income[-c(59,60), ]
colnames(med_income) <- c("County", "Median Income")
income <- med_income[ ,2]
income <- as.numeric(gsub(" ", "", income, fixed = TRUE))
med_income <- as.data.frame(demographic[ ,c(1,29)])
med_income <- med_income[-c(59,60), ]
colnames(med_income) <- c("County", "Median Income")
income <- med_income[ ,2]
income
?str_replace
income <- str_replace(income, "$", "")
income
income <- str_replace(income, "$", "")
income
income <- gsub("$", "", income, fixed = TRUE))
income <- gsub("$", "", income, fixed = TRUE)
income <- gsub(" ", "", income, fixed = TRUE)
income
income <- as.numeric(income)
income
income <- as.data.frame(income)
View(income)
med_income <- as.data.frame(demographic[ ,c(1,29)])
med_income <- med_income[-c(59,60), ]
colnames(med_income) <- c("County", "Median Income")
income <- med_income[ ,2]
income <- gsub("$", "", income, fixed = TRUE)
income <- gsub(" ", "", income, fixed = TRUE)
income <- as.data.frame(income)
housing_type <- sapply(housing_type, as.numeric)
income <- sapply(income, as.numeric)
med_income <- as.data.frame(demographic[ ,c(1,29)])
med_income <- med_income[-c(59,60), ]
colnames(med_income) <- c("County", "Median Income")
income <- med_income[ ,2]
income <- gsub("$", "", income, fixed = TRUE)
income <- gsub(" ", "", income, fixed = TRUE)
income <- as.data.frame(income)
income <- as.numeric(income)
income <- apply(income, as.numeric)
housing_type <- housing[ ,c(9:17)]
housing_type <- gsub("%", "", housing_type, fixed = TRUE)
housing_type <- as.data.frame(housing_type)
housing_type <- sapply(housing_type, as.numeric)
housing_type <- housing_type/100
housing_type <- as.data.frame(housing_type)
housing_type <- cbind(housing_type, housing[ ,161:162])
housing_type <- housing[ ,c(9:17)]
housing_type <- gsub("%", "", housing_type, fixed = TRUE)
housing_type <- as.data.frame(housing_type)
housing_type <- sapply(housing_type, as.numeric)
View(housing_type)
med_income <- as.data.frame(demographic[ ,c(1,29)])
med_income <- med_income[-c(59,60), ]
colnames(med_income) <- c("County", "Median Income")
income <- med_income[ ,2]
income <- gsub("$", "", income, fixed = TRUE)
income <- gsub(" ", "", income, fixed = TRUE)
income
