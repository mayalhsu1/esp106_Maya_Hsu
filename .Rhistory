temp <- new_type[b,]
temp[,3] <- 1
temp <- aggregate(temp[,3], by = list(temp$UNIT_CAT), sum)
sum <- sum(temp[,2])
temp[,3] <- temp[,2]/sum
temp[ ,2] <- NULL
temp[ ,3] <- a[i]
all_projected <- rbind(all_projected, temp)
}
a <- unique(new_type$CNTY_NAME) #creating object with all county names in new_type data
#for loop that
for(i in 1:length(a)) {
b = new_type$CNTY_NAME == a[i]
temp <- new_type[b,]
temp[,3] <- 1
temp <- aggregate(temp[,3], by = list(temp$UNIT_CAT), sum)
sum <- sum(temp[,2])
temp[,3] <- temp[,2]/sum
temp[ ,2] <- NULL
temp[ ,3] <- a[i]
all_projected <- rbind(all_projected, temp)
}
new_type <- as.data.frame(projected[ ,c(2, 9)]) #creating new data frame with county name and housing type for new projects
all_projected <- data.frame(v1 = character(), v2 = numeric(), v3 = character()) #creating empty data frame
a <- unique(new_type$CNTY_NAME) #creating object with all county names in new_type data
#for loop that
for(i in 1:length(a)) {
b = new_type$CNTY_NAME == a[i]
temp <- new_type[b,]
temp[,3] <- 1
temp <- aggregate(temp[,3], by = list(temp$UNIT_CAT), sum)
sum <- sum(temp[,2])
temp[,3] <- temp[,2]/sum
temp[ ,2] <- NULL
temp[ ,3] <- a[i]
all_projected <- rbind(all_projected, temp)
}
colnames(all_projected) <- c("Type", "%", "County")
all_projected <- pivot_wider(all_projected, names_from = "Type", values_from = "%")
all_projected <-all_projected[order(all_projected$County), ]
c <- unique(all_projected$County)
all_projected[ ,1] <- NULL
all_projected[is.na(all_projected)] <- 0
all_projected <- t(all_projected)
color1 <- c('#e31a1c','#1f78b4','#b2df8a','#33a02c','#fb9a99', '#a6cee3')
legend <- rownames(all_projected)
par(mar=c(4,5,5,5)+.1, xpd = TRUE)
barplot(all_projected, horiz = TRUE, names.arg = c, cex.names = 0.4, las = 1, col = color1, main = "Housing Type in Counties With\nApproved SB35 Projects", xlab = "Proportion", cex.axis = 0.5, width = 1, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32))
legend("right", inset = -0.19, legend = legend, fill = color, cex = 0.5, title = "Housing Type")
View(all_projected)
colnames(all_projected) <- c("Type", "%", "County") #changing column names
View(housing_type)
all_projected <- t(all_projected)
color1 <- c('#e31a1c','#1f78b4','#b2df8a','#33a02c','#fb9a99', '#a6cee3')
legend <- rownames(all_projected)
par(mar=c(4,5,5,5)+.1, xpd = TRUE)
barplot(all_projected, horiz = TRUE, names.arg = c, cex.names = 0.4, las = 1, col = color1, main = "Housing Type in Counties With\nApproved SB35 Projects", xlab = "Proportion", cex.axis = 0.5, width = 1, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32))
sb35_type <- as.data.frame(SB35[ ,c(2, 9)])
sb35_projected <- data.frame(v1 = character(), v2 = numeric(), v3 = character())
s <- unique(sb35_type$CNTY_NAME)
for(i in 1:length(s)) {
b = sb35_type$CNTY_NAME == s[i]
temp <- sb35_type[b,]
temp[,3] <- 1
temp <- aggregate(temp[,3], by = list(temp$UNIT_CAT), sum)
sum <- sum(temp[,2])
temp[,3] <- temp[,2]/sum
temp[ ,2] <- NULL
temp[ ,3] <- s[i]
sb35_projected <- rbind(sb35_projected, temp)
}
View(sb35_projected)
new_type <- as.data.frame(projected[ ,c(2, 9)]) #creating new data frame with county name and housing type for new projects
all_projected <- data.frame(v1 = character(), v2 = numeric(), v3 = character()) #creating empty data frame
a <- unique(new_type$CNTY_NAME) #creating object with all county names in new_type data
#for loop that creates a data frame with the proportion of each housing type per county
for(i in 1:length(a)) {
b = new_type$CNTY_NAME == a[i]
temp <- new_type[b,]
temp[,3] <- 1
temp <- aggregate(temp[,3], by = list(temp$UNIT_CAT), sum)
sum <- sum(temp[,2])
temp[,3] <- temp[,2]/sum
temp[ ,2] <- NULL
temp[ ,3] <- a[i]
all_projected <- rbind(all_projected, temp)
}
colnames(all_projected) <- c("Type", "%", "County") #changing column names
all_projected <- pivot_wider(all_projected, names_from = "Type", values_from = "%") #changing format of data frame so that the housing types are the column names
all_projected <-all_projected[order(all_projected$County), ] #alphabetizing by county
c <- unique(all_projected$County) #creating object of county names
all_projected[ ,1] <- NULL #removing county column
all_projected[is.na(all_projected)] <- 0 #setting NA values to 0 so we can graph data
all_projected <- t(all_projected) #transposing data
color1 <- c('#e31a1c','#1f78b4','#b2df8a','#33a02c','#fb9a99', '#a6cee3')
png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/SB35 Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mar=c(4,5,5,5)+.1, xpd = TRUE)
barplot(all_projected, horiz = TRUE, names.arg = c, cex.names = 0.4, las = 1, col = color1, main = "Housing Type in Counties With\nApproved SB35 Projects", xlab = "Proportion", cex.axis = 0.5, width = 1, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32))
legend("right", inset = -0.19, legend = legend, fill = color, cex = 0.5, title = "Housing Type")
legend <- rownames(all_projected) #creating object of row names (housing type)
png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/SB35 Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mar=c(4,5,5,5)+.1, xpd = TRUE)
barplot(all_projected, horiz = TRUE, names.arg = c, cex.names = 0.4, las = 1, col = color1, main = "Housing Type in Counties With\nApproved SB35 Projects", xlab = "Proportion", cex.axis = 0.5, width = 1, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32))
png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/SB35 Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mar=c(4,5,5,5)+.1, xpd = TRUE)
barplot(all_projected, horiz = TRUE, names.arg = c, cex.names = 0.4, las = 1, col = color1, main = "Housing Type in Counties With\nApproved SB35 Projects", xlab = "Proportion", cex.axis = 0.5, width = 1, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32))
legend("right", inset = -0.19, legend = legend, fill = color, cex = 0.5, title = "Housing Type")
dev.off()
png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/Projected Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mar=c(4,5,5,5)+.1, xpd = TRUE)
barplot(all_projected, horiz = TRUE, names.arg = c, cex.names = 0.4, las = 1, col = color1, main = "Housing Type in Counties With\nApproved SB35 Projects", xlab = "Proportion", cex.axis = 0.5, width = 1, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32))
legend("right", inset = -0.19, legend = legend, fill = color, cex = 0.5, title = "Housing Type")
dev.off()
png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/Projected Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mar=c(4,5,5,5)+.1, xpd = TRUE)
barplot(all_projected, horiz = TRUE, names.arg = c, cex.names = 0.4, las = 1, col = color1, main = "Housing Type in Counties With\nApproved SB35 Projects", xlab = "Proportion", cex.axis = 0.5, width = 0.6, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32))
legend("right", inset = -0.19, legend = legend, fill = color, cex = 0.5, title = "Housing Type")
dev.off()
png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/Projected Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mar=c(4,5,5,5)+.1, xpd = TRUE)
barplot(all_projected, horiz = TRUE, names.arg = c, cex.names = 0.4, las = 1, col = color1, main = "Housing Type in Counties With\nApproved SB35 Projects", xlab = "Proportion", cex.axis = 0.5, width = 0.4, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32))
legend("right", inset = -0.19, legend = legend, fill = color, cex = 0.5, title = "Housing Type")
dev.off()
png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/Projected Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mar=c(4,5,5,5)+.1, xpd = TRUE)
barplot(all_projected, horiz = TRUE, names.arg = c, cex.names = 0.4, las = 1, col = color1, main = "Housing Type in Counties With\nApproved SB35 Projects", xlab = "Proportion", cex.axis = 0.5, width = 0.5, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32))
legend("right", inset = -0.19, legend = legend, fill = color, cex = 0.5, title = "Housing Type")
dev.off()
png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/Projected Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mar=c(4,5,5,5)+.1, xpd = TRUE)
barplot(all_projected, horiz = TRUE, names.arg = c, cex.names = 0.4, las = 1, col = color1, main = "Housing Type in Counties With\nApproved SB35 Projects", xlab = "Proportion", cex.axis = 0.5, width = 0.5, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32))
legend("right", inset = -0.4, legend = legend, fill = color, cex = 0.4, title = "Housing Type")
dev.off()
png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/Projected Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mar=c(4,5,5,5)+.1, xpd = TRUE)
barplot(all_projected, horiz = TRUE, names.arg = c, cex.names = 0.4, las = 1, col = color1, main = "Housing Type in Counties With\nApproved SB35 Projects", xlab = "Proportion", cex.axis = 0.5, width = 0.5, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32), cex.main = 0.7)
legend("right", inset = -0.4, legend = legend, fill = color, cex = 0.4, title = "Housing Type")
dev.off()
png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/Projected Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mar=c(4,5,5,7)+.1, xpd = TRUE)
barplot(all_projected, horiz = TRUE, names.arg = c, cex.names = 0.4, las = 1, col = color1, main = "Housing Type in Counties With\nApproved SB35 Projects", xlab = "Proportion", cex.axis = 0.5, width = 0.5, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32), cex.main = 0.7)
legend("right", inset = -0.4, legend = legend, fill = color, cex = 0.4, title = "Housing Type")
dev.off()
png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/Projected Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mar=c(4,5,5,7)+.1, xpd = TRUE)
barplot(all_projected, horiz = TRUE, names.arg = c, cex.names = 0.4, las = 1, col = color1, main = "Housing Type in Counties With\nApproved SB35 Projects", xlab = "Proportion", cex.axis = 0.5, width = 0.5, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32), cex.main = 0.7)
legend("right", inset = -0.5, legend = legend, fill = color, cex = 0.4, title = "Housing Type")
dev.off()
png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/Projected Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mar=c(4,5,5,7)+.1, xpd = TRUE)
barplot(all_projected, horiz = TRUE, names.arg = c, cex.names = 0.4, las = 1, col = color1, main = "Housing Type in Counties With\nApproved SB35 Projects", xlab = "Proportion", cex.axis = 0.5, width = 0.5, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32), cex.main = 0.7)
legend("right", inset = -0.55, legend = legend, fill = color, cex = 0.4, title = "Housing Type")
dev.off()
png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/Projected Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mar=c(4,5,5,7)+.1, xpd = TRUE)
barplot(all_projected, horiz = TRUE, names.arg = c, cex.names = 0.3, las = 1, col = color1, main = "Housing Type of Future Housing Developments", xlab = "Proportion", cex.axis = 0.5, width = 0.5, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32), cex.main = 0.7)
legend("right", inset = -0.55, legend = legend, fill = color, cex = 0.4, title = "Housing Type")
dev.off()
png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/Projected Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mar=c(4,5,5,7)+.1, xpd = TRUE)
barplot(all_projected, horiz = TRUE, names.arg = c, cex.names = 0.3, las = 1, col = color1, main = "Housing Type of Future Housing Developments", xlab = "Proportion", cex.axis = 0.5, width = 0.5, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32), cex.main = 0.7)
legend("right", inset = -0.55, legend = legend, fill = color, cex = 0.4, title = "Housing Type")
dev.off()
l = projected$APP_SUBMITTED_SB35 == "No"
noSB35 <- projected[l,] #creating new data frame with houisng projects that did not submit an SB35 application
noSB35_type <- as.data.frame(noSB35[ ,c(2, 9)])
noSB35_projected <- data.frame(v1 = character(), v2 = numeric(), v3 = character())
n <- unique(noSB35_type$CNTY_NAME)
for(i in 1:length(n)) {
b = noSB35_type$CNTY_NAME == n[i]
temp <- noSB35_type[b,]
temp[,3] <- 1
temp <- aggregate(temp[,3], by = list(temp$UNIT_CAT), sum)
sum <- sum(temp[,2])
temp[,3] <- temp[,2]/sum
temp[ ,2] <- NULL
temp[ ,3] <- n[i]
noSB35_projected <- rbind(noSB35_projected, temp)
}
colnames(noSB35_projected) <- c("Type", "%", "County")
noSB35_projected <- pivot_wider(noSB35_projected, names_from = "Type", values_from = "%")
noSB35_projected <- noSB35_projected[order(noSB35_projected$County), ]
cnosb35 <- unique(noSB35_projected$County)
noSB35_projected[ ,1] <- NULL
noSB35_projected[is.na(noSB35_projected)] <- 0
noSB35_projected <- t(noSB35_projected)
legend2 <- rownames(noSB35_projected)
#png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/No SB35 Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mgp=c(3,1,0), mar=c(4,5,8,6)+.1, xpd = TRUE)
barplot(noSB35_projected, horiz = TRUE, names.arg = cnosb35, cex.names = 0.3, las = 1, col = color1, main = "New Housing Projects That\nDid Not Use SB35", xlab = "Proportion", cex.axis = 0.5, width = 0.6, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32), cex.main = 0.7)
legend("right", inset = -0.42, legend = legend2, fill = color, cex = 0.35, title = "Housing Type")
#dev.off()
ggplot(approved_v_income, aes(x = approved_v_income[ ,4], y = approved_v_income[ ,5]))+
geom_point()+geom_smooth(method = "lm")+
labs(x = "Median Income", y = "SB35 Projects per Person", title = "Median Income per County vs. SB35 Projects/Person per County")
cor.test(approved_v_income[ ,4], approved_v_income[ ,5]) #getting test statistics
cor.test(change_v_sb35[ ,4], change_v_sb35[ ,9]) #getting test statistics
cor.test(change_v_sb35[ ,4], change_v_sb35[ ,8]) #getting test statistics
model <- lm(change_v_sb35[ ,8] ~ change_v_sb35[ ,4], change_v_sb35)
coef <- coef(model)
coef(model)
ggplot(approved_v_income, aes(x = approved_v_income[ ,4], y = approved_v_income[ ,5]))+
geom_point()+geom_smooth(method = "lm")+
labs(x = "Median Income", y = "SB35 Projects per Person", title = "Median Income per County vs. SB35 Projects/Person per County")
model <- lm(approved_v_income[ ,5] ~ approved_v_income[ ,4], change_v_sb35)
coef(model)
cor.test(approved_v_income[ ,4], approved_v_income[ ,5]) #getting test statistics
cor.test(change_v_sb35[ ,4], change_v_sb35[ ,8]) #getting test statistics
new_type <- as.data.frame(projected[ ,c(2, 9)]) #creating new data frame with county name and housing type for new projects
all_projected <- data.frame(v1 = character(), v2 = numeric(), v3 = character()) #creating empty data frame
a <- unique(new_type$CNTY_NAME) #creating object with all county names in new_type data
#for loop that creates a data frame with the proportion of each housing type per county
for(i in 1:length(a)) {
b = new_type$CNTY_NAME == a[i]
temp <- new_type[b,]
temp[,3] <- 1
temp <- aggregate(temp[,3], by = list(temp$UNIT_CAT), sum)
sum <- sum(temp[,2])
temp[,3] <- temp[,2]/sum
temp[ ,2] <- NULL
temp[ ,3] <- a[i]
all_projected <- rbind(all_projected, temp)
}
colnames(all_projected) <- c("Type", "%", "County") #changing column names
all_projected <- pivot_wider(all_projected, names_from = "Type", values_from = "%") #changing format of data frame so that the housing types are the column names
all_projected <-all_projected[order(all_projected$County), ] #alphabetizing by county
c <- unique(all_projected$County) #creating object of county names
all_projected[ ,1] <- NULL #removing county column
all_projected[is.na(all_projected)] <- 0 #setting NA values to 0 so we can graph data
all_projected <- t(all_projected) #transposing data
color1 <- c('#e31a1c','#1f78b4','#b2df8a','#33a02c','#fb9a99', '#a6cee3')
legend <- rownames(all_projected) #creating object of row names (housing type)
png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/Projected Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mar=c(4,5,5,7)+.1, xpd = TRUE)
barplot(all_projected, horiz = TRUE, names.arg = c, cex.names = 0.3, las = 1, col = color1, main = "Housing Type of Future Housing Developments", xlab = "Proportion", cex.axis = 0.5, width = 0.5, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32), cex.main = 0.7)
legend("right", inset = -0.55, legend = legend, fill = color, cex = 0.4, title = "Housing Type")
dev.off()
par(mar=c(4,5,5,7)+.1, xpd = TRUE)
barplot(all_projected, horiz = TRUE, names.arg = c, cex.names = 0.3, las = 1, col = color1, main = "Housing Type of Future Housing Developments", xlab = "Proportion", cex.axis = 0.5, width = 0.5, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32), cex.main = 0.7)
legend("right", inset = -0.55, legend = legend, fill = color, cex = 0.4, title = "Housing Type")
png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/SB35 Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mar=c(4,5,5,8)+.1, xpd = TRUE)
barplot(sb35_projected, horiz = TRUE, names.arg = csb35, cex.names = 0.4, las = 1, col = color1, main = "New Housing Projects That\n Used SB35", xlab = "Proportion", cex.axis = 0.5, width = 1, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32))
sb35_type <- as.data.frame(SB35[ ,c(2, 9)]) #creating new data frame with county name and housing type for new projects for projects approved by SB35
sb35_projected <- data.frame(v1 = character(), v2 = numeric(), v3 = character()) #creating new data frame
s <- unique(sb35_type$CNTY_NAME)  #creating object with all county names in sb35_type data
#for loop that creates a data frame with the proportion of each housing type per county
for(i in 1:length(s)) {
b = sb35_type$CNTY_NAME == s[i]
temp <- sb35_type[b,]
temp[,3] <- 1
temp <- aggregate(temp[,3], by = list(temp$UNIT_CAT), sum)
sum <- sum(temp[,2])
temp[,3] <- temp[,2]/sum
temp[ ,2] <- NULL
temp[ ,3] <- s[i]
sb35_projected <- rbind(sb35_projected, temp)
}
colnames(sb35_projected) <- c("Type", "%", "County")
sb35_projected <- pivot_wider(sb35_projected, names_from = "Type", values_from = "%")
sb35_projected <- sb35_projected[order(sb35_projected$County), ]
csb35 <- unique(sb35_projected$County)
sb35_projected[ ,1] <- NULL
sb35_projected[is.na(sb35_projected)] <- 0
sb35_projected <- t(sb35_projected)
legend1 <- rownames(sb35_projected)
png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/SB35 Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mar=c(4,5,5,8)+.1, xpd = TRUE)
barplot(sb35_projected, horiz = TRUE, names.arg = csb35, cex.names = 0.4, las = 1, col = color1, main = "New Housing Projects That\n Used SB35", xlab = "Proportion", cex.axis = 0.5, width = 1, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32))
legend("right", inset = -0.6, legend = legend1, fill = color, cex = 0.4, title = "Housing Type")
dev.off()
l = projected$APP_SUBMITTED_SB35 == "No"
noSB35 <- projected[l,] #creating new data frame with houisng projects that did not submit an SB35 application
noSB35_type <- as.data.frame(noSB35[ ,c(2, 9)])
noSB35_projected <- data.frame(v1 = character(), v2 = numeric(), v3 = character())
n <- unique(noSB35_type$CNTY_NAME)
for(i in 1:length(n)) {
b = noSB35_type$CNTY_NAME == n[i]
temp <- noSB35_type[b,]
temp[,3] <- 1
temp <- aggregate(temp[,3], by = list(temp$UNIT_CAT), sum)
sum <- sum(temp[,2])
temp[,3] <- temp[,2]/sum
temp[ ,2] <- NULL
temp[ ,3] <- n[i]
noSB35_projected <- rbind(noSB35_projected, temp)
}
colnames(noSB35_projected) <- c("Type", "%", "County")
noSB35_projected <- pivot_wider(noSB35_projected, names_from = "Type", values_from = "%")
noSB35_projected <- noSB35_projected[order(noSB35_projected$County), ]
cnosb35 <- unique(noSB35_projected$County)
noSB35_projected[ ,1] <- NULL
noSB35_projected[is.na(noSB35_projected)] <- 0
noSB35_projected <- t(noSB35_projected)
legend2 <- rownames(noSB35_projected)
#png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/No SB35 Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mgp=c(3,1,0), mar=c(4,5,8,6)+.1, xpd = TRUE)
barplot(noSB35_projected, horiz = TRUE, names.arg = cnosb35, cex.names = 0.3, las = 1, col = color1, main = "New Housing Projects That\nDid Not Use SB35", xlab = "Proportion", cex.axis = 0.5, width = 0.6, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32), cex.main = 0.7)
legend("right", inset = -0.42, legend = legend2, fill = color, cex = 0.35, title = "Housing Type")
#dev.off()
View(noSB35_type)
l = projected$APP_SUBMITTED_SB35 == "No"
noSB35 <- projected[l,] #creating new data frame with houisng projects that did not submit an SB35 application
View(noSB35)
knitr::opts_chunk$set(echo = TRUE)
path <- "/Users/mayahsu/Desktop/school/environmental data science/esp106_Maya_Hsu/"
knitr::opts_knit$set(root.dir = path)
setwd(path)
library(tidyverse)
library(tidyr)
library(ggplot2)
housing <- read.csv("https://raw.githubusercontent.com/mayalhsu1/esp106_Maya_Hsu/main/ACSCP1Y2021.CP04-2023-03-15T072503.csv")
projected <- read.csv("https://raw.githubusercontent.com/mayalhsu1/esp106_Maya_Hsu/main/table-a-housing-development-applications-submitted.csv")
demographic <- read.csv("https://raw.githubusercontent.com/mayalhsu1/esp106_Maya_Hsu/808243c7a23cddf66bb9998d6640d19c26a7a202/county%20data.csv")
housing <- t(housing) #transposing the data
headers <- housing[1, ] #extracted values from row 1 as a vector
colnames(housing) <- headers #renamed columns with row 1 values
housing <- housing[-1, ] #removed first row
housing <- housing[-165, ] #removed empty row
Years <- c("2021", "2019", "2018", "2017") #creating list of dates
Years <- rep(Years, 41) #repeating dates
as.data.frame(Years) #data frame
housing <- cbind(housing, Years) #adding dates to housing data
County <- rownames(housing) #extracting the row names, which say the county and year
County <- substr(County, 1, nchar(County)-34) #extracting the county name
as.data.frame(County) #turning the vector of counties into a data frame
County <- gsub(".", " ", County, fixed = TRUE) #replacing the periods with spaces
rownames(housing) <- 1:nrow(housing) #changing the row names to numbers
housing <- gsub("N", NA, housing) #replacing N values with NA
housing <- gsub("(X)", NA, housing) #replacing (X) values with NA
housing <- cbind(housing, County) #adding a column for county
housing_type <- housing[ ,c(9:17)] #subsetting the housing data for housing type columns
housing_type <- gsub("%", "", housing_type, fixed = TRUE) #getting rid of %
housing_type <- as.data.frame(housing_type) #turning housing_type into a data frame
housing_type <- sapply(housing_type, as.numeric) #turning the data values into numeric
housing_type <- housing_type/100 #dividing by 100 to get proportion
housing_type <- as.data.frame(housing_type) #turning into data frame
housing_type <- cbind(housing_type, housing[ ,161:162]) #adding year and county data
projected$CNTY_NAME <- str_to_title(projected$CNTY_NAME) #changing to title capitalization
i = projected$APP_SUBMITTED_SB35 == "Yes-Approved"
SB35 <- projected[i,] #projects approved with SB35
counties <- unique(SB35$CNTY_NAME) #list of counties that had approved SB35 projects
counties <- sort(counties) #alphabetizing
h2021 <- subset(housing_type, Years == "2021") #housing type data for 2021
sb35_housing_type <- subset(h2021, h2021[ ,11] %in% counties) #subsetting 2021 housing data for only counties that had approved sb35 projects, no data for Mono or San Benito in current housing data
names_sb35 <- sb35_housing_type[, 11] #creating object with county names
sb35_housing_type <- subset(sb35_housing_type, select = -c(10, 11)) #removing year and county columns
color <- c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6')
sb_type <- colnames(sb35_housing_type) #creating object with column names
sb_type <- str_squish(sb_type) #removing extra spaces
#sb35_housing_type <- as.matrix(sb35_housing_type)
sb35_housing_type <- t(sb35_housing_type) #r
#png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/Current Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mar=c(4,5,5,5)+.1, xpd = TRUE)
barplot(sb35_housing_type, horiz = TRUE, names.arg = names_sb35, cex.names = 0.4, las = 1, col = color, main = "Current Housing in Counties With\nApproved SB35 Projects in 2021", xlab = "Proportion", cex.axis = 0.5, width = 1, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32))
legend("right", inset = -0.19, legend = sb_type, fill = color, cex = 0.5, title = "Housing Type")
#dev.off()
units <- aggregate(SB35[, 20], by = list(SB35$CNTY_NAME), sum) #sum of sb35 units approved for each county
colnames(units) <- c("County", "Units") #renaming columns
med_income <- as.data.frame(demographic[ ,c(1,2,29)]) #extracting county, population, and median income columns from demographics data
med_income <- med_income[-c(59,60), ] #removing blank rows
colnames(med_income) <- c("County", "Population","Median Income") #renaming columns
income <- med_income[ ,3] #creating object with median income data
income <- gsub("$", "", income, fixed = TRUE) #removing $
income <- gsub(" ", "", income, fixed = TRUE) #removing extra spaces
income <- gsub(",", "", income, fixed = TRUE) #removing commas
income <- as.data.frame(income) #changing to data frame
income <- sapply(income, as.numeric) #making values numeric
med_income[ ,3] <- income #replacing third column in med_income with numeric income object
population <- med_income[ ,2] #creating object with population data
population <- gsub(",", "", population, fixed = TRUE) #removing commas
population <- as.data.frame(population) #changing into data frame
population <- sapply(population, as.numeric) #making values numeric
med_income[ ,2] <- population #replacing second column in med_income with numeric income object
approved_v_income <- merge(units, med_income, by = "County") #merging sb35 units data with income and population data by county
approved_v_income[ ,5] <- approved_v_income[ ,2]/approved_v_income[ ,3] #creating a column with sb35 units per person for each county
colnames(approved_v_income) <- c("County", "Count", "Population", "Median Income", "Units/Person")
ggplot(approved_v_income, aes(x = approved_v_income[ ,4], y = approved_v_income[ ,5]))+
geom_point()+geom_smooth(method = "lm")+
labs(x = "Median Income", y = "SB35 Projects per Person", title = "Median Income per County vs. SB35 Projects/Person per County")
cor.test(approved_v_income[ ,4], approved_v_income[ ,5]) #getting test statistics
model <- lm(approved_v_income[ ,5] ~ approved_v_income[ ,4], change_v_sb35)
model <- lm(approved_v_income[ ,5] ~ approved_v_income[ ,4], approved_v_income)
coef(model)
units <- aggregate(SB35[, 20], by = list(SB35$CNTY_NAME), sum) #sum of sb35 units approved for each county
colnames(units) <- c("County", "Units") #renaming columns
med_income <- as.data.frame(demographic[ ,c(1,2,29)]) #extracting county, population, and median income columns from demographics data
med_income <- med_income[-c(59,60), ] #removing blank rows
colnames(med_income) <- c("County", "Population","Median Income") #renaming columns
income <- med_income[ ,3] #creating object with median income data
income <- gsub("$", "", income, fixed = TRUE) #removing $
income <- gsub(" ", "", income, fixed = TRUE) #removing extra spaces
income <- gsub(",", "", income, fixed = TRUE) #removing commas
income <- as.data.frame(income) #changing to data frame
income <- sapply(income, as.numeric) #making values numeric
med_income[ ,3] <- income #replacing third column in med_income with numeric income object
population <- med_income[ ,2] #creating object with population data
population <- gsub(",", "", population, fixed = TRUE) #removing commas
population <- as.data.frame(population) #changing into data frame
population <- sapply(population, as.numeric) #making values numeric
med_income[ ,2] <- population #replacing second column in med_income with numeric income object
approved_v_income <- merge(units, med_income, by = "County") #merging sb35 units data with income and population data by county
approved_v_income[ ,5] <- approved_v_income[ ,2]/approved_v_income[ ,3] #creating a column with sb35 units per person for each county
colnames(approved_v_income) <- c("County", "Count", "Population", "Median Income", "Units/Person")
ggplot(approved_v_income, aes(x = approved_v_income[ ,4], y = approved_v_income[ ,5]))+
geom_point()+geom_smooth(method = "lm")+
labs(x = "Median Income", y = "SB35 Projects per Person", title = "Median Income per County vs. SB35 Projects/Person per County")
cor.test(approved_v_income[ ,4], approved_v_income[ ,5]) #getting test statistics
model1 <- lm(approved_v_income[ ,5] ~ approved_v_income[ ,4], approved_v_income)
coef(model1)
sub <- as.data.frame(housing[ , c(2, 161, 162)]) #creating a data frame with total housing units, year, and county
sub <- subset(sub, Years == 2017 | Years == 2021) #subsetting for 2017 and 2021
sub <- sub[-c(145, 148), ] #removing Tehama county because it has no data for 2017
sub[ ,1] <- gsub(",", "", sub[ ,1], fixed = TRUE) #eliminating commas in total housing column
sub[ ,1:2] <- sapply(sub[ ,1:2], as.numeric) #making total housing and years columns numeric
colnames(sub) <- c("Total Housing Units", "Year", "County") #renaming columns
sub <- pivot_wider(sub, names_from = "Year", values_from = "Total Housing Units") #chaning data frame so that columns are county, 2017, and 2021; values for 2017 and 2021 columns are total housing units from those respective years
sub[ ,4] <- (sub[ ,2]-sub[ ,3])/sub[ ,3] #creating a fourth column with percent change in total housing units
colnames(sub) <- c("County", "2021",  "2017", "Percent Change in Housing") #changing column names
change_v_sb35 <- merge(sub, approved_v_income, by = "County") #merging sb35 units/person data with percent change in total housing
ggplot(change_v_sb35, aes(x = change_v_sb35[ ,4], y = change_v_sb35[ ,8]))+
geom_point()+geom_smooth(method = "lm")+
labs(x = "Percent Change in Total Housing", y = "Number of Approved SB35 Projects per Person")
model1 <- lm(change_v_sb35[ ,8] ~ change_v_sb35[ ,4], change_v_sb35)
coef(model1)
cor.test(change_v_sb35[ ,4], change_v_sb35[ ,8]) #getting test statistics
new_type <- as.data.frame(projected[ ,c(2, 9)]) #creating new data frame with county name and housing type for new projects
all_projected <- data.frame(v1 = character(), v2 = numeric(), v3 = character()) #creating empty data frame
a <- unique(new_type$CNTY_NAME) #creating object with all county names in new_type data
#for loop that creates a data frame with the proportion of each housing type per county
for(i in 1:length(a)) {
b = new_type$CNTY_NAME == a[i]
temp <- new_type[b,]
temp[,3] <- 1
temp <- aggregate(temp[,3], by = list(temp$UNIT_CAT), sum)
sum <- sum(temp[,2])
temp[,3] <- temp[,2]/sum
temp[ ,2] <- NULL
temp[ ,3] <- a[i]
all_projected <- rbind(all_projected, temp)
}
colnames(all_projected) <- c("Type", "%", "County") #changing column names
all_projected <- pivot_wider(all_projected, names_from = "Type", values_from = "%") #changing format of data frame so that the housing types are the column names
all_projected <-all_projected[order(all_projected$County), ] #alphabetizing by county
c <- unique(all_projected$County) #creating object of county names
all_projected[ ,1] <- NULL #removing county column
all_projected[is.na(all_projected)] <- 0 #setting NA values to 0 so we can graph data
all_projected <- t(all_projected) #transposing data
color1 <- c('#e31a1c','#1f78b4','#b2df8a','#33a02c','#fb9a99', '#a6cee3')
legend <- rownames(all_projected) #creating object of row names (housing type)
#png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/Projected Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mar=c(4,5,5,7)+.1, xpd = TRUE)
barplot(all_projected, horiz = TRUE, names.arg = c, cex.names = 0.3, las = 1, col = color1, main = "Housing Type of Future Housing Developments", xlab = "Proportion", cex.axis = 0.5, width = 0.5, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32), cex.main = 0.7)
legend("right", inset = -0.55, legend = legend, fill = color, cex = 0.4, title = "Housing Type")
#dev.off()
sb35_type <- as.data.frame(SB35[ ,c(2, 9)]) #creating new data frame with county name and housing type for new projects for projects approved by SB35
sb35_projected <- data.frame(v1 = character(), v2 = numeric(), v3 = character()) #creating new data frame
s <- unique(sb35_type$CNTY_NAME)  #creating object with all county names in sb35_type data
#for loop that creates a data frame with the proportion of each housing type per county
for(i in 1:length(s)) {
b = sb35_type$CNTY_NAME == s[i]
temp <- sb35_type[b,]
temp[,3] <- 1
temp <- aggregate(temp[,3], by = list(temp$UNIT_CAT), sum)
sum <- sum(temp[,2])
temp[,3] <- temp[,2]/sum
temp[ ,2] <- NULL
temp[ ,3] <- s[i]
sb35_projected <- rbind(sb35_projected, temp)
}
colnames(sb35_projected) <- c("Type", "%", "County")
sb35_projected <- pivot_wider(sb35_projected, names_from = "Type", values_from = "%")
sb35_projected <- sb35_projected[order(sb35_projected$County), ]
csb35 <- unique(sb35_projected$County)
sb35_projected[ ,1] <- NULL
sb35_projected[is.na(sb35_projected)] <- 0
sb35_projected <- t(sb35_projected)
legend1 <- rownames(sb35_projected)
#png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/SB35 Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mar=c(4,5,5,8)+.1, xpd = TRUE)
barplot(sb35_projected, horiz = TRUE, names.arg = csb35, cex.names = 0.4, las = 1, col = color1, main = "New Housing Projects That\n Used SB35", xlab = "Proportion", cex.axis = 0.5, width = 1, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32))
legend("right", inset = -0.6, legend = legend1, fill = color, cex = 0.4, title = "Housing Type")
#dev.off()
l = projected$APP_SUBMITTED_SB35 == "No"
noSB35 <- projected[l,] #creating new data frame with houisng projects that did not submit an SB35 application
noSB35_type <- as.data.frame(noSB35[ ,c(2, 9)])
noSB35_projected <- data.frame(v1 = character(), v2 = numeric(), v3 = character())
n <- unique(noSB35_type$CNTY_NAME)
for(i in 1:length(n)) {
b = noSB35_type$CNTY_NAME == n[i]
temp <- noSB35_type[b,]
temp[,3] <- 1
temp <- aggregate(temp[,3], by = list(temp$UNIT_CAT), sum)
sum <- sum(temp[,2])
temp[,3] <- temp[,2]/sum
temp[ ,2] <- NULL
temp[ ,3] <- n[i]
noSB35_projected <- rbind(noSB35_projected, temp)
}
colnames(noSB35_projected) <- c("Type", "%", "County")
noSB35_projected <- pivot_wider(noSB35_projected, names_from = "Type", values_from = "%")
noSB35_projected <- noSB35_projected[order(noSB35_projected$County), ]
cnosb35 <- unique(noSB35_projected$County)
noSB35_projected[ ,1] <- NULL
noSB35_projected[is.na(noSB35_projected)] <- 0
noSB35_projected <- t(noSB35_projected)
legend2 <- rownames(noSB35_projected)
#png(filename = "/Users/mayahsu/Desktop/school/environmental data science/final/No SB35 Housing Data", width = 5, height = 5, units = "in", res = 300)
par(mgp=c(3,1,0), mar=c(4,5,8,6)+.1, xpd = TRUE)
barplot(noSB35_projected, horiz = TRUE, names.arg = cnosb35, cex.names = 0.3, las = 1, col = color1, main = "New Housing Projects That\nDid Not Use SB35", xlab = "Proportion", cex.axis = 0.5, width = 0.6, cex.lab = 0.7, xlim = c(0,1), ylim = c(0, 32), cex.main = 0.7)
legend("right", inset = -0.42, legend = legend2, fill = color, cex = 0.35, title = "Housing Type")
#dev.off()
